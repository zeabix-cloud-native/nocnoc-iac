name: "performance_cluster"

on:
  push:
    branches:
      - main

jobs:

  Terraform_Plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name != 'pull_request'
    permissions:
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initial AWS Account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Save state
        run: echo "{name}={value}" >> $GITHUB_STATE
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
#          terraform_version: 1.2.9
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -diff -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out "tf_plan"
        continue-on-error: true
      
      - name: Upload TF Plan
        uses: actions/upload-artifact@v2
        with:
          name: tf_plan
          path: ./
          if-no-files-found: error
          retention-days: 1
  
  Terraform_Apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: Terraform_Plan
#    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps: 
      - name: Checkout
        uses: actions/checkout@master
      
      - name: Initial AWS Account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Download TF Plan
        uses: actions/download-artifact@v2
        with:
          name: tf_plan
          path: ./tf_plan

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Get
        id: get
        run: terraform get -no-color

      - name: Terraform Apply
        id: apply
        continue-on-error: true
#        run: terraform apply "tf_plan" -input=false -auto-approve
        run: terraform apply "tf_plan"


#      - name: Sleep for 1 minute
#        run: sleep 1m
#        shell: bash

  Terraform_Destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    if: always() 
    needs: Terraform_Apply
#    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#    environment:
#      name: tf_destroy
    
    steps: 
      - name: Checkout
        uses: actions/checkout@master
      
      - name: Initial AWS Account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Download TF Plan
        uses: actions/download-artifact@v2
        with:
          name: tf_plan
          path: ./

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Get
        id: get
        run: terraform get -no-color

      - name: Terraform Destroy
        id: destroy       
#        run: terraform destroy "tf_plan" -input=false -auto-approve
        run: terraform destroy "tf_plan"

