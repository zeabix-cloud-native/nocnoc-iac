name: "Performance Cluster"

on:
  push:
    branches:
      - main

jobs:
  terraform-setup:
    name: "Terraform"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initial AWS Account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Save state
        run: echo "{name}={value}" >> $GITHUB_STATE

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
#          terraform_version: 1.2.9
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -diff 
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out "tf_plan"
        continue-on-error: true
            
      - name: Upload TF Plan
        uses: actions/upload-artifact@v2
        with:
          name: tf_plan
          path: ./tf_plan/
          if-no-files-found: error
          retention-days: 1
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

#      - name: Terraform Apply
#        id: apply
#        continue-on-error: true
#        run: terraform apply -input=false -auto-approve

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install and configure kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(<kubectl.sha256) kubectl" | sha256sum --check

          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

#      - name: Update KubeConfig
#        run: |
#          aws eks --region $(terraform output -raw region) update-kubeconfig \
#          --name $(terraform output -raw cluster_name)


#      - name: Sleep for 1 minute
#        run: sleep 1m
#        shell: bash

#      - name: Destroy resources jobs
#        id: destroy
#        if: always() 
#        run: terraform destroy -input=false -auto-approve